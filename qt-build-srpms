#!/bin/bash
# Copyright (C) 2009-2013 Eric Shubert <eric@datamatters.us>
#
# Build QMailToaster srpm file
######################################################################
# Change Log
# 12/15/13 shubes - cleaned up input parameter, multi-spec process
# 12/14/13 shubes - don't overlay github from existing srpm
# 12/05/13 shubes - added multiple specs per repo for qmailadmin-spambox
# 12/03/13 shubes - removed win32 from clamav source
# 12/02/13 shubes - fixed up 'expect' code
# 11/29/13 shubes - modified to copy resulting src.rpm to repo staging
# 11/28/13 shubes - modified to use gspecdir as rpmbuild/SOURCES
#                 - added spectool for obtaining external sources
#                 - refactored a bit
# 11/25/13 shubes - created
# TODOs:
# .) check mygithub for uncommitted changes
# .) check mygithub SHA against lastest SHA on github.com (unpushed commits)
#    e.g. https://api.github.com/repos/QmailToaster/qmailtoaster-build/commits
######################################################################

# change my* variables appropriately. Nothing else should be changed.
mygithub=~/github
mygpgpass="use your gpg key pass"
myrepouser=shubes-stage

######################################################################
# find the grepo (git repo) name
#
a1_find_git_repo_name(){

if [ -z "$1" ]; then
  if [ -z "ls *.spec 2>/dev/null" ]; then
    echo "$me what? (no .spec file here)"
    exit 1
  else
    grepo=${PWD##*/}
  fi
else
  specfile="$(find $mygithub/$1 -maxdepth 1 -name "*.spec" -print -quit)"
  if [ -z "$specfile" ]; then
    echo "$me - .spec file not found within $mygithub/$1"
    exit 1
  else
    grepo=$1
  fi
fi
}

######################################################################
# clone the git repo to a temporary directory,
#
a3_clone_git_to_temp(){

tempgit=$(tempfile 2>/dev/null)  || tempgit=/tmp/$me.$$

# make sure the temp stuff is deleted when we're done
trap "rm -rf $tempgit" 0 1 2 5 15

mkdir $tempgit
# git 1.8.5 will have a -C option. 'til then, we need to cd to the target
savepwd=$PWD
cd $tempgit
git clone https://github.com/QMailToaster/$grepo
cd $savepwd

gspecdir=$tempgit/$grepo

if [ ! -d "$gspecdir/.git" ]; then
  echo "$me - unable to clone git repo - terminating"
  exit 1
fi
}

######################################################################
# build an src.rpm file from the .spec file
#

a5_create_src_rpm(){

pkg=${specfile##*/}
pkg=${pkg%.spec}

b52_use_existing_src_rpm

b54_get_external_sources

b56_trim_clamav

b58_build_signed_rpm

if [ -f "$srcrpm" ]; then
  scp -p -P 17132 $srcrpm $myrepouser@$repohost:$repostage 2>/dev/null
else
  echo "$me - $srcrpm not found, not copied to repo staging"
  exit 1
fi
}

######################################################################
# use an existing src rpm file if one exists
#
b52_use_existing_src_rpm(){

read vertag version anythingleft <<!EOF!
$(grep --max-count=1 "^Version:" $specfile)
!EOF!

read reltag relstring anythingleft <<!EOF!
$(grep --max-count=1 "^Release:" $specfile)
!EOF!
release=$(echo $relstring | sed -e "s|%{?dist}|$repotag|")

# we only want to get the external sources from the existing srpm,
# not the spec or github sources
srcrpmname=$pkg-$version-$release.src.rpm
srcrpm=$(rpm --eval='%{_srcrpmdir}')/$srcrpmname
if [ -f "$srcrpm" ]; then
  rpm -ivh $srcrpm
fi
}

######################################################################
# get sources from their internet locations
# we take them from the local sourcedir if they exist there
#
b54_get_external_sources(){

while read srctag srcval anythingleft; do
# this loop is done at least once even with no input
# it appears that read does not treat a single \n as EOF
  if [ -z "$srcval" ]; then
    break
  fi
  srcname=${srcval##*/}
  if [ ! -f "$gspecdir/$srcname" ]; then
    if [ -f "$sourcedir/$srcname" ]; then
      cp -p $sourcedir/$srcname $gspecdir/$srcname
    else
      srcstring=${srctag%:}
      srcnum=${srcstring#Source}
      echo "$me getting source $srcnum"
      spectool --get-files -C $gspecdir --source $srcnum $specfile
    fi
  fi
done <<!EOF!
$(spectool --list-files $specfile)
!EOF!
}

######################################################################
# remove 95M of win32 from clamav tarball
#
b56_trim_clamav(){

if [ "$pkg" == clamav ]; then
  if [ -f "$gspecdir/clamav-$version.tar.gz" ]; then
    tar -C $gspecdir -xzf $gspecdir/clamav-$version.tar.gz
    rm -rf $gspecdir/clamav-$version/win32
    tar -C $gspecdir -czf $gspecdir/clamav-$version.tar.gz clamav-$version
  else
    echo "$me - $gspecdir/clamav-$version.tar.gz not found"
    ls $gspecdir
    exit 1
  fi
fi
}

######################################################################
# build and invoke expect script to build and sign src.rpm with no prompt
#
b58_build_signed_rpm(){

expect -c "
  set timeout -1
  spawn rpmbuild -bs --define \"dist $repotag\" --define \"_sourcedir $gspecdir\" --sign $specfile
  expect {
    phrase:  { send \"$mygpgpass\r\"; exp_continue }
  }
"
}

######################################################################
# main routine begins here
#
me=${0##*/}
myver=v1.3

repotag=.qt
repohost=masterepo.qmailtoaster.com
repostage=/stage/testing/SRPMS/.
sourcedir=$(rpm --eval='%{_sourcedir}')

a1_find_git_repo_name $1

a3_clone_git_to_temp

for specfile in $(ls $gspecdir/*.spec); do
  a5_create_src_rpm
done

exit 0
